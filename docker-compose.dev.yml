version: '3.7'

networks:
  network:
    name: ${PUBLIC_ALL_APP_NAME}

services:
  api:
    container_name: ${PUBLIC_ALL_APP_NAME}_api
    image: node:lts-alpine
    ports:
      - ${PUBLIC_DEV_API_PORT}:${PUBLIC_DEV_API_PORT}
    volumes:
      - ./package.json:/app/api/package.json
      - ./package-lock.json:/app/api/package-lock.json
      - ./dist/apps/api:/app/api
    env_file: .env
    command: sh -c
      "cd /app/api && npm i --only=prod && node main.js"
    restart: always
    networks:
      - network

  pwa:
    container_name: ${PUBLIC_ALL_APP_NAME}_pwa
    image: nginx:alpine
    ports:
      - ${PUBLIC_DEV_PWA_PORT}:80
    volumes:
      - ./docker/pwa/nginx.conf:/etc/nginx/nginx.conf
      - ./dist/apps/pwa:/var/www/html
    restart: always
    networks:
      - network

  db:
    container_name: ${PUBLIC_ALL_APP_NAME}_db
    image: postgres:alpine
    ports:
      - ${PRIVATE_DEV_DB_PORT}:${PRIVATE_DEV_DB_PORT}
    # volumes:
    #   - ./db:/var/lib/postgresql/data
    command: -p ${PRIVATE_DEV_DB_PORT}
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_PASSWORD: '${PRIVATE_DEV_DB_PASSWORD}'
      POSTGRES_USER: ${PRIVATE_DEV_DB_USER}
      POSTGRES_DB: ${PRIVATE_DEV_DB_NAME}
    restart: always
    networks:
      - network
